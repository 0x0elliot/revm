name: Valgrind Cachegrind

on:
  pull_request:
    branches: [main]
jobs:
  valgrind:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable

      - name: Install Valgrind
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind

      - name: Install cg_annotate
        run: |
          sudo apt-get install -y kcachegrind

      - name: Run Valgrind
        run: |
          cargo b -r -p revm-test --bin snailtracer
          valgrind --tool=cachegrind target/release/snailtracer

          # Extract relevant information from cachegrind.out file
          cg_annotate cachegrind.out.* > cachegrind_results.txt

      - name: Valgrind results
        id: valgrind_results
        run: |
          cat cachegrind_results.txt
          contents=$(<cachegrind_results.txt)
          printf "%s" "${contents}" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload this to a gist
        id: api_request
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const content = fs.readFileSync('cachegrind_results.txt', 'utf8');
            const response = await github.gists.create({
              files: {
                'cachegrind_results.txt': {
                  content: content
                }
              }
            });
            console.log(response.data.html_url);
            core.setOutput("summary_url", response.data.html_url);

      - name: Comment link to step summary on PR
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.number }}
          body: |
            ${{ steps.valgrind_results.outputs.mkdn }}
            [Valgrind Cachegrind Results](${{ steps.api_request.outputs.summary_url }})

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}