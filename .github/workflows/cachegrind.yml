name: Valgrind Cachegrind

on:
  pull_request:
    branches: [main]
jobs:
  valgrind:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable

      - name: Install Valgrind
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind

      - name: Install cg_annotate
        run: |
          sudo apt-get install -y kcachegrind

      - name: Run Valgrind
        run: |
          cargo b -r -p revm-test --bin snailtracer
          valgrind --tool=cachegrind target/release/snailtracer

          # Extract relevant information from cachegrind.out file
          cg_annotate cachegrind.out.* > cachegrind_results.txt

      - name: Valgrind results
        id: valgrind_results
        run: |
          cat cachegrind_results.txt
          contents=$(<cachegrind_results.txt)
          printf "out=%s" "${contents//$'\n'/\\n}" >> "$GITHUB_OUTPUT"

      - name: Comment on PR
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Valgrind Cachegrind ðŸ“–\n`

            output += `${{ steps.valgrind_results.outputs.out }}`

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })```
